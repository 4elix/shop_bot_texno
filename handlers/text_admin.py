from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from db.part_admin import delete_category
from keyboards.inline import kb_work_object, kb_category_save_or_cancel, option_object
from utils import CUCategoryState, DeleteCategoryState, CUProductState, DeleteProductState

router_txt_admin = Router()


@router_txt_admin.message(F.text == '–†–∞–±–æ—Ç–∞ —Å –æ–±—ä–µ–∫—Ç–æ–º üõ†Ô∏è')
async def react_btn_work_object(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Å –∫–∞–∫–∏–º –æ–±—ä–µ–∫—Ç–æ–º –±—É–¥–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å', reply_markup=option_object)


@router_txt_admin.message(CUCategoryState.category_id)
async def get_category_id(message: Message, state: FSMContext):
    try:
        cat_id = int(message.message.text)
        await state.update_data(category_id=cat_id)
        await state.set_state(CUCategoryState.name)
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
    except Exception as error:
        print(error)
        await state.set_state(CUCategoryState.category_id)
        await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –≤–≤–µ–¥–∏—Ç–µ Id –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ù–∞–ø—Ä–∏–º–µ—Ä: 3')


@router_txt_admin.message(CUCategoryState.name)
async def get_category_name(message: Message, state: FSMContext):
    await state.update_data(name=message.message.text)
    await message.answer('–û—Ç–ª–∏—á–Ω–æ, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç')

    data = await state.get_data()
    cat_id = data.get('category_id', '–ù–µ —É–∫–∞–∑–∞–Ω–Ω–æ')
    name = data['name']
    result = f'ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {cat_id}.\n–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {name}'
    await message.answer(result, reply_markup=kb_category_save_or_cancel)


@router_txt_admin.message(DeleteCategoryState.category_id)
async def get_category_id_for_delete(message: Message, state: FSMContext):
    try:
        category_id = int(message.text)
        status = delete_category(category_id)
        if status == 200:
            text = '–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞'
        else:
            text = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏'

        await message.answer(text, reply_markup=kb_work_object('categories', '–ö–∞—Ç–µ–≥–æ—Ä–∏—é'))
    except Exception as error:
        print(error)
        await state.set_state(DeleteCategoryState.category_id)
        await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –≤–≤–µ–¥–∏—Ç–µ Id –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ù–∞–ø—Ä–∏–º–µ—Ä: 3')
